<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	
	<!-- Log4j 配置  -->
	<!-- 设置由Sprng载入的Log4j配置文件位置  -->
	<context-param>
	<param-name>log4jConfigLocation</param-name>
	<param-value>WEB-INF/config/log4j/log4j.properties</param-value>
	</context-param>
	
	<!-- 设置容器每xx秒扫描log4j的配置文件 -->
	<context-param>  
        <param-name>log4jRefreshInterval</param-name>  
        <param-value>3000</param-value>  
    </context-param>  
  	
  	<!-- 设置webAppRootKey参数，来导出可以在log4j.properties配置文件中使用的代表Web应用根目录的占位符 -->
	<context-param>  
 		<param-name>webAppRootKey</param-name>  
		<param-value>webApp.root</param-value>  
	</context-param>

	<!-- 需要添加spring-web.jar包，否则用发生错误信息-->
	<listener>  
        <listener-class>  
            org.springframework.web.util.Log4jConfigListener  
        </listener-class>  
    </listener>  
    
	<!-- Spring 配置 -->
    <listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/spring/spring-init.xml
		</param-value>
	</context-param>
	
	<!-- axis2 配置  
	<servlet>
        <servlet-name>AxisServlet</servlet-name>
        <servlet-class>org.apache.axis2.transport.http.AxisServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
	</servlet>
    
    <servlet-mapping>
        <servlet-name>AxisServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
	-->	  
	<!-- 字符串转码过滤器  -->
	<filter>
		<filter-name>Set Character Encoding</filter-name>
		<filter-class>
			com.ssh.web.filter.SetCharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>Set Character Encoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>AutoSetUserAdapterFilter</filter-name>
		<filter-class>
			com.ssh.web.filter.AutoSetUserAdapterFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>AutoSetUserAdapterFilter</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping> 
	
	<!-- struts 配置 -->
	<filter>
		<filter-name>struts</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.FilterDispatcher
		</filter-class>
		<init-param>  
        	<param-name>config</param-name>  
       	 	<param-value>
       	 		<!-- struts2默认加载的文件也要手动指定,否则不会自动加载 -->
       	 		struts-default.xml,
       	 		struts-plugin.xml,
       	 		../struts/struts.xml
       	 	</param-value> 
    	</init-param> 
	</filter>
	
	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>/servlet/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>struts</filter-name>
		<url-pattern>/service/*</url-pattern>
	</filter-mapping>

	
	<!-- 自定义监听器,跟随系统启动 -->
	<listener>
		<description>跟随系统启动,进行必要的数据初始化</description>
		<listener-class>com.ssh.web.listener.startup.InitApplicationListener</listener-class>
	</listener>
	
	<welcome-file-list>
		<welcome-file>welcom.jsp</welcome-file>
	</welcome-file-list>
	
	<session-config>
		<session-timeout>360</session-timeout>
	</session-config>
	
</web-app>
